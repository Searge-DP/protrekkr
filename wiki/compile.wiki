#labels t
#sidebar sidebar
<pre>
Compiling the tracker on an already supported operating system will require
the 3 src/extralibs (that is SDL_draw, tinyxml & zlib-1.2.3) to be generated first,
only the tracker itself can be generated with either one of the makefiles
of the top directory or via the visual studio project.

 In order to use the replay routine either use the provided makefiles or vc studio
projects located in the release/distrib/replay directory, a .ptp module file
and a ptk_properties.h source file both generated by the tracker.
Replace the PTK_MODULE variable content of the assembly files located
in release/distrib/replay/test with the filename of the .ptp module and compile.

 In order to port the tracker to a not supported operating system,
3 issues should be considered (beside crafting the relevant makefiles, that is):

 1. The keyboard handling.

   It is important for the keyboard to behave identically on every port.
  The input is usually handled differently depending on the computer or even the
  operating system, for example the Windows version doesn't require keyboard
  definition files but the Linux one does and on Mac OS X the translation
  to unicode is handled differently.

 2. The midi drivers

    These can be disabled at compilation by using the __NOMIDI__ constant,
   the midi in/out drivers are located in src/midi/midi_drv_xxxxx.cpp files.
   
    The functions of the drivers mainly concern enumerating the devices, opening
   them, receiving/sending messages and calling the callback function for incoming
   messages.

 3. The codecs

    To reduce the size of the modules, the tracker is using (lossy) codecs present
   in the operating system to pack (and depack) the samples in .ptp module files.
   This can be disabled at compilation too by using the __NOCODEC__ constant.
   I'll try to come up with an acceptable solution for operating systems which do not
   come with codecs pre-installed.

    Note that packing samples in .ptp files is not mandatory.
</pre>